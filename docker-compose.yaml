services:
  reverse-proxy:
    image: traefik:v3.1.0
    command: 
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  goapp:
    build:
      context: ./src
    image: goapp
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.goapp.rule=Host(`127.0.0.1`) && PathPrefix(`/api`)"
      - "traefik.http.services.goapp.loadbalancer.server.port=8080"
    env_file:
      - .env
    environment:
      - ENV=dev
    develop: 
      watch:
        - action: sync
          path: src/
          target: /go/src/app
        - action: rebuild
          path: src/
    depends_on:
        - postgres
        - redis
  postgres:
    image: "postgres:alpine3.20"
    environment:
      - POSTGRES_PASSWORD=${PG_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - "pg_data:/var/lib/postgresql/data"
      - "./schema.sql:/docker-entrypoint-initdb.d/schema.sql"
    command: ["postgres", "-c", "log_statement=none"]
  redis:
    image: redis:alpine3.20
    ports:
      - "6379:6379"
    volumes:
      - "redisdata:/data"
volumes:
  pg_data:
  redisdata: